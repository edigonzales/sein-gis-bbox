user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;


events { worker_connections 1024; }


http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;


    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent"';
    access_log /var/log/nginx/access.log main;


    sendfile on;
    keepalive_timeout 65;
    gzip on;


    # Upstream target (HTTPS)
    map $http_upgrade $connection_upgrade { default upgrade; '' close; }


    server {
        listen 80;
        server_name app.local.so.ch;
        return 301 https://$host$request_uri;
    }


    server {
        listen 443 ssl http2;
        server_name app.local.so.ch;


        ssl_certificate /etc/nginx/ssl/self.crt;
        ssl_certificate_key /etc/nginx/ssl/self.key;


        # Root for our static site
        root /usr/share/nginx/html;
        index index.html;


        # --- Reverse proxy for QWC2 under /map/ ---
        location /map/ {
            # Proxy to the real QWC2
            proxy_ssl_server_name on; # SNI for geo.so.ch
            proxy_pass https://geo.so.ch/map/; # keep trailing slashes


            # Forward standard headers
            proxy_set_header Host geo.so.ch; # present upstream host if required
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;


            # If upstream compresses, sub_filter can't edit bodies; disable compression from upstream
            proxy_set_header Accept-Encoding "";


            # Rewrite absolute URLs in HTML responses to stay under /map/
            # (helpful if upstream emits absolute links)
            sub_filter_once off;
            sub_filter 'https://geo.so.ch/' '/map/';
            sub_filter 'href="/map/' 'href="/map/';
            sub_filter 'src="/map/' 'src="/map/';


            # Rewrite redirects back to our /map/
            proxy_redirect https://geo.so.ch/ /;
            proxy_redirect https://geo.so.ch/map/ /map/;


            # Rewrite cookie domains so cookies become firstâ€‘party here
            proxy_cookie_domain geo.so.ch app.local.so.ch;
            proxy_cookie_domain .so.ch app.local.so.ch;


            # Optional: if framing is blocked by upstream headers, you can override them (uncomment with care)
            # proxy_hide_header X-Frame-Options;
            # proxy_hide_header Content-Security-Policy;
            # add_header X-Frame-Options "SAMEORIGIN" always;
            # add_header Content-Security-Policy "frame-ancestors 'self'" always;


            # Timeouts
            proxy_connect_timeout 15s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Serve our app
        location / {
            try_files $uri $uri/ /index.html =404;
        }
    }
}